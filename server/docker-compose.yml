name: ${DOCKER_COMPOSE_PROJECT_NAME}

services:
  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    ports:
      - ${DATABASE_EXTERNAL_PORT:-5428}:5432
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}

    networks:
      - custom-net

  postgres-backup:
    image: postgres:14-alpine
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./backups:/backups
    entrypoint: >
      sh -c "
      mkdir -p /backups &&
      while true; do
        sleep 10
        PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -U $$POSTGRES_USER -h postgres $$POSTGRES_DB > /backups/backup-$$(date +%Y%m%d%H%M%S).sql &&
        echo Backup created at $(date) &&
        ls -1 /backups/*.sql | head -n -4 | xargs rm -f
        sleep 86400;
      done
      "
    networks:
      - custom-net

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - ':6379'

    volumes:
      - ./redis/data:/data

    networks:
      - custom-net

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    ports:
      - ':9000'
      - ':9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}

    volumes:
      - ./minio/data:/data

    command: server /data --console-address ":9001"

    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.${TRAEFIK_MINIO_ROUTER_NAME:-xmrchats3}.entrypoints=websecure
      - traefik.http.routers.${TRAEFIK_MINIO_ROUTER_NAME:-xmrchats3}.rule=Host(`${S3_DOMAIN_NAME:-s3.xmrchat.com}`)
      - traefik.http.routers.${TRAEFIK_MINIO_ROUTER_NAME:-xmrchats3}.tls=true
      - traefik.http.routers.${TRAEFIK_MINIO_ROUTER_NAME:-xmrchats3}.tls.certresolver=myresolver
      - traefik.http.services.${TRAEFIK_MINIO_ROUTER_NAME:-xmrchats3}.loadbalancer.server.port=9000

    networks:
      traefik:
        aliases:
          - ${MINIO_ALIAS:-minio}
      custom-net:


  signal-cli:
    image: bbernhard/signal-cli-rest-api
    ports:
      - ':8080'
    restart: unless-stopped
    volumes:
      - ./signal-cli:/home/.local/share/signal-cli
    environment:
      - MODE=normal
    networks:
      custom-net:


  simplex:
    build:
      context: ./docker/simplex
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - ':5225'
    volumes:
      - ./simplex:/root/.simplex
    networks:
      custom-net:

  nest:
    build: .
    restart: unless-stopped
    ports:
      - ${PORT:-3083}:3000
    depends_on:
      - postgres
      - redis
      - minio
      - simplex
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.${TRAEFIK_NEST_ROUTER_NAME:-xmrchatnest}.entrypoints=websecure
      - traefik.http.routers.${TRAEFIK_NEST_ROUTER_NAME:-xmrchatnest}.rule=Host(`${DOMAIN_NAME:-nest.xmrchat.com}`)
      - traefik.http.routers.${TRAEFIK_NEST_ROUTER_NAME:-xmrchatnest}.tls=true
      - traefik.http.routers.${TRAEFIK_NEST_ROUTER_NAME:-xmrchatnest}.tls.certresolver=myresolver
      - traefik.http.services.${TRAEFIK_NEST_ROUTER_NAME:-xmrchatnest}.loadbalancer.server.port=3000
    volumes:
      - ./logs:/home/node/app/logs

    networks:
      traefik:
        aliases:
          - ${NEST_ALIAS:-nest}
      custom-net:

networks:
  custom-net:
  traefik:
    name: traefik
    external: true
